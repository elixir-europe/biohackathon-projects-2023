/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * A (universally) unique identifier for the taxon
 */
export type TaxonIdentifier = string;
/**
 * An identifier for the nomenclatural details of a scientific name
 */
export type TaxonValidNameIdentifier = string;
/**
 * An identifier for the nomenclatural details of a scientific name
 */
export type TaxonNameIdentifier = string;
/**
 * Full scientific name with author and date
 */
export type TaxonFullName = string;
/**
 * Name of author
 */
export type TaxonNameAuthor = string;
/**
 * Four digit year in which the name was published in
 */
export type TaxonNameYear = number;
/**
 * Full taxon name with author and date, as it appeared in the first publication
 */
export type TaxonNameBrackets = string;
/**
 * An identifier for the organism
 */
export type OrganismIdentifier = string;
/**
 * A universally unique identifier for the occurrence
 */
export type OccurrenceIdentifier = string;
/**
 * An unambiguous reference to the media resource
 */
export type MediaIdentifier = string;
/**
 * An identifier for the dwc:Occurrence (as opposed to a particular digital record of the dwc:Occurrence). In the absence of a persistent global unique identifier, construct one from a combination of identifiers in the record that will most closely make the dwc:occurrenceID globally unique
 */
export type DocumentOccurrenceIdentifier = string;
/**
 * Information about rights held in and over the resource
 */
export type CopyrightLicense = string;
/**
 * A URI that uniquely identifies a service that provides a representation of the underlying resource
 */
export type MediaDataURL = string;
/**
 * URI for a reviewer
 */
export type Reviewed = string;

/**
 * Generic concept of a taxon for identification
 */
export interface Taxon {
  taxonID: TaxonIdentifier;
  taxonValidNameID: TaxonValidNameIdentifier;
  taxonName?: TaxonName;
  organisms?: Organism[];
  [k: string]: unknown;
}
/**
 * Taxon name properties to describe the specimen, author and date
 */
export interface TaxonName {
  taxonNameID: TaxonNameIdentifier;
  taxonFullName: TaxonFullName;
  taxonNameAuthor: TaxonNameAuthor;
  taxonNameYear: TaxonNameYear;
  taxonNameBrackets: TaxonNameBrackets;
  [k: string]: unknown;
}
/**
 * A particular organism
 */
export interface Organism {
  organismID: OrganismIdentifier;
  occurrences?: Occurrence[];
  [k: string]: unknown;
}
/**
 * An existence of an organism in a particular place at a particular time
 */
export interface Occurrence {
  occurrenceID: OccurrenceIdentifier;
  media?: Media[];
  [k: string]: unknown;
}
export interface Media {
  mediaID: MediaIdentifier;
  documentOccurrenceID: DocumentOccurrenceIdentifier;
  copyrightLicense?: CopyrightLicense;
  mediaDataURL: MediaDataURL;
  reviewed: Reviewed;
  [k: string]: unknown;
}
